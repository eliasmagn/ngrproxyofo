#!/bin/bash
#########################SIMPLE NGINX CONFIG FOR REVERSE PROXY IN OPENWRT#############
#   Copyright (C) 2019 elias@eliashaisch.de
#   
#   This program is free software; you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation; either version 3 of the License, or
#   (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program; if not, write to the Free Software
#   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
########################SIMPLE NGINX CONFIG FOR REVERSE PROXY IN OPENWRT#############
#MAKE SURE uhttpd IS NOT LISTENING ON PORT 80 NOR 443
#opkg install nginx
#open icmp in firewall
#ping is needed
#curl https://raw.githubusercontent.com/Neilpang/acme.sh/master/acme.sh > acme.sh
#chmod a+x "acme.sh"
#./acme.sh --install
#
set -e
echo "simple nginx reverse proxy https ssl configuration with acme support"
echo "please run ngrpconf_80 to create http config file for desired domain"
echo "#"

if [ "$0" = "/bin/bash" ]; then
   echo -e "\e[92mscript is tested to run on bash not on $0 openwrt defaults to ash "
   echo -e "\e[92m script is known to not run on ash!"
   echo -e "\e[92mpls install bash and start script from bash"
   echo -e "\e[92mopkg install bash"
   echo -e "\e[39maborting!"
   exit 1
fi

if [ "$#" -ne 2 ]; then
   echo "Wrong number of parameters"
   echo "usage:"
   echo "user@host: ngrpconf example.com 0.0.0.0"
   echo "#"

fi


if [[ $2 =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
   echo "Ip is in correct format"
   PROXYIP=$2
   echo "#"

else
   echo "usage:"
   echo "user@host: ngrpconf example.com 0.0.0.0"
   echo "ip format is 1-255.1-255.1-255.1-255"
   echo " for example: 192.168.123.123 <-"
   echo " wan adress and open firewall ports for port 80"
   echo "change uhttpd listen port 80 and 443 when u use luci on wan address"
   echo "nginx will be listen on port 80 and 443 by default"
   echo "#"
   exit 1
fi



##TestIfDomainPointsOnLocalNetworkInterface
#ip=$(ping -c 1 $1 | gawk -F'[()]' '/PING/{print $2}')
#echo "$1 points to $ip"
#ip addr | grep -q $ip
#if [ $? -ne 0 ]; then
#   echo "The domain $1 is not pointing on any known interface -> aborting."
#   echo "#"
#   exit 1
#else
#FQDN=$1
#fi


##TestIfDomainPointsOnLocalNetworkInterface
ip=$(ping -c 1 $1 | gawk -F'[()]' '/PING/{print $2}')
echo "ping $1 points to $ip"
ip addr | grep $ip

if [ $? -ne 0 ]; then
   echo "probing with nslookup and google dns(8.8.8.8)"
   ip=$(nslookup haisch.art 8.8.8.8 | awk -F': ' 'NR==5 { print $2 } ' -eq $1)

   if [ $ip -ne $1 ]; then
     ip=$(nslookup haisch.art 8.8.8.8 | awk -F': ' 'NR==6 { print $2 } ' -eq $1)

     if [ $ip -ne $1 ]; then
       echo "The domain $1 is not pointing on any local interface(ping command) -> abort script? (y/n)"
       read yesorno

       if [ "yesorno" = "y" ] || [ "yesorno" = "Y" ]; then
       exit 1
       fi
     fi
   fi
fi



echo "using $PROXYIP for $FQDN"
echo "setting up directory /var/www/$FQDN"
echo "#"
mkdir -p /var/www/$FQDN
mkdir -p /etc/nginx/rproxy-sites_ssl
mkdir -p /var/www/$FQDN/.well-known/acme_challenge/
http_host='$http_host'
remote_addr='$remote_addr'
proxy_add_x_forwarded_for='$proxy_add_x_forwarded_for'
scheme='$scheme'
host='$host'
if [ ! -f /etc/nginx/rproxy-sites_ssl/$FQDN.conf ]; then
  echo "setting up directory /etc/nginx/acme.sh/$FQDN"
  echo "for certificates"
  echo "#"
  mkdir -p /etc/nginx/acme.sh/$FQDN

 if [ ! -f /etc/nginx/dh4096.pem ]; then

    echo "creating diffi hellman file! in /etc/nginx/dh4096.pem"
    openssl dhparam -out /etc/nginx/dh4096.pem 4096
  fi

  echo "issuing letsencrypt certificates"
  echo "used command:"
  echo "./acme.sh --issue -k 4096 -d $FQDN -d www.$FQDN -w /var/www/$FQDN -ecc --cert-file /etc/nginx/acme.sh/$FQDN/cert.pem --key-file /etc/nginx/acme.sh/$FQDN/key.pem --fullchain-file /etc/nginx/acme.sh/$FQDN/fullchain.pem --nginx --debug --force > acme_ngrpconf_443.log"
  echo "acme.sh autput is stored in acme-$FQDN-443.log"
  /root/acme.sh --issue -k 4096 -d $FQDN -d www.$FQDN -w /var/www/$FQDN --cert-file /etc/nginx/acme.sh/$FQDN/cert.pem --key-file /etc/nginx/acme.sh/$FQDN/key.pem --fullchain-file /etc/nginx/acme.sh/$FQDN/fullchain.pem --nginx --debug --force --log acme_ngrpconf-$FQDN-443.log


####configFILE


cat >> /etc/nginx/rproxy-sites_ssl/$FQDN.conf << EOF

####server_$FQDN
    server {
        server_name   $FQDN;
        server_name   www.$FQDN;
        listen        443;

        error_page    500 502 503 504  /50x.html;

        ssl on;
        ssl_certificate /etc/nginx/acme.sh/$FQDN/fullchain.pem;
        ssl_certificate_key     /etc/nginx/acme.sh/$FQDN/key.pem;
        ssl_trusted_certificate /etc/nginx/acme.sh/$FQDN/cert.pem;
        ssl_session_cache shared:SSL:10m;
        ssl_prefer_server_ciphers on;
        ssl_protocols TLSv1.2; # TLSv1.3; #enable tlsv1.3 with nginx 1.13 or higher
        ssl_dhparam /etc/nginx/dh4096.pem;
#       ssl_ciphers  EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:EECDH+aRSA+SHA384:EECDH+aRSA+SHA256:EECDH:EDH+aRSA:HIGH:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!SEED:!DSS:!CAMELLIA:!Medium;
        ssl_ciphers 'ECDHE:DHE:!AES128:HIGH:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!SEED:!DSS:!CAMELLIAD';
#       ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!SEED:!DSS:!CAMELLIA:!Medium;
        ssl_ecdh_curve secp384r1;
        ssl_session_timeout  10m;
        ssl_session_cache shared:SSL:10m;
        #ssl_session_tickets off; #enable only for nginx > 1.5.9
        #ssl_stapling on; #enable only for nginx > 1.3.7
        #ssl_stapling_verify on; #enable only for nginx > 1.3.7
        #resolver $DNS-IP-1 $DNS-IP-2 valid=300s;
        #resolver_timeout 5s;
        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";

         location / {
               add_header       X-Host          $host;
               proxy_set_header        Host            $http_host;
               proxy_set_header        X-Real-IP       $remote_addr;
               proxy_pass_request_headers on;
               proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
               proxy_set_header X-Forwarded-Host $host;
               proxy_set_header X-Forwarded-Proto $scheme;
               proxy_set_header X-Forwarded-Server $http_host;
               client_max_body_size    10m;
               client_body_buffer_size 128k;
               proxy_connect_timeout   90;
               proxy_send_timeout      90;
               proxy_read_timeout      90;
               proxy_buffers           32 4k;
               proxy_pass http://$PROXYIP;


          }


 }
####server_$FQDN

EOF


####configFILEend

  echo "$FQDN" > /var/www/$FQDN/.well-known/acme_challenge/index.html

#  if [ ! -f /etc/nginx/dh4096.pem ]; then
#
#    echo "creating diffi hellman file! in /etc/nginx/dh4096.pem"
#    openssl dhparam -out /etc/nginx/dh4096.pem 4096
#  fi
#
#  echo "issuing letsencrypt certificates"
#  echo "used command:"
#  echo "./acme.sh --issue -k 4096 -d $FQDN -d www.$FQDN -w /var/www/$FQDN -ecc --cert-file /etc/nginx/acme.sh/$FQDN/cert.pem --key-file /etc/nginx/acme.sh/$FQDN/key.pem --fullchain-file /etc/nginx/acme.sh/$FQDN/fullchain.pem --nginx --debug --force > acme_ngrpconf_443.log"
#  echo "acme.sh autput is stored in acme-$FQDN-443.log"
#  /root/acme.sh --issue -k 4096 -d $FQDN -d www.$FQDN -w /var/www/$FQDN --cert-file /etc/nginx/acme.sh/$FQDN/cert.pem --key-file /etc/nginx/acme.sh/$FQDN/key.pem --fullchain-file /etc/nginx/acme.sh/$FQDN/fullchain.pem --nginx --debug --force --log acme_ngrpconf-$FQDN-443.log


  nginx -t

  if [ $? -eq 1 ]; then
    echo "Nginx config is faulty pls be kind and examine /etc/nginx/rproxy-sites_ssl/$FQDN.conf"
    echo "and /etc/nginx/nginx.conf!"
    echo "#"

  else
    echo "echo config looks good starting nginx"
    echo "#"

    /etc/init.d/nginx restart

  fi

  echo -e "\e[92mdone!"
  echo -e "\e[39muse following command to issue a letsencrypt"
  echo "certificate from github url :"
  echo "https://raw.githubusercontent.com/Neilpang/acme.sh/master/acme.sh"
  echo "#"

else

  echo -e "\e[92mfile exists"
  echo -e "\e[92m/etc/nginx/rproxy-sites_ssl/$FQDN.conf"
  #cat /etc/nginx/rproxy-sites_ssl/$FQDN
  echo -e "\e[92mdelete file and restart script if you wish"
  echo -e "\e[39m#"


fi

  echo "starting nginx"
  /etc/init.d/nginx start


echo "/########################################\"
echo "# you need to make sure directive:       #"
echo "# include /etc/nginx/rproxy-sites_ssl/*.conf #"
echo "# is included in /etc/nginx/nginx.conf   #"
echo "\########################################/"
echo -e "\e[39mgg & glhf"
echo "end of script"
echo "#"
